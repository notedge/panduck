ASTNode {
    kind: Statements(
        [
            ASTNode {
                kind: CodeNode(
                    CodeNode {
                        inline: false,
                        highlight: true,
                        language: "front-matter",
                        code: "---\ntitle: Markdown it!\nlang: en-US\n---\n",
                        show_file_name: None,
                        show_line_number: None,
                        highlight_lines: [],
                        hide_lines: [],
                    },
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: StyledSpan(
                                StyleNode {
                                    kind: Strong,
                                    children: [
                                        ASTNode {
                                            kind: TextSpan(
                                                "Advertisement :)",
                                            ),
                                        },
                                    ],
                                },
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: ListView(
                    ListSimpleNode {
                        ignore_global_list_style: false,
                        first_symbol: Arabic,
                        children: [],
                    },
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "You will like those projects!",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "===",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 1,
                        children: [
                            ASTNode {
                                kind: TextSpan(
                                    "h1 Heading 8-)",
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 2,
                        children: [
                            ASTNode {
                                kind: TextSpan(
                                    "h2 Heading",
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 3,
                        children: [
                            ASTNode {
                                kind: TextSpan(
                                    "h3 Heading",
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 4,
                        children: [
                            ASTNode {
                                kind: TextSpan(
                                    "h4 Heading",
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 5,
                        children: [
                            ASTNode {
                                kind: TextSpan(
                                    "h5 Heading",
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 6,
                        children: [
                            ASTNode {
                                kind: TextSpan(
                                    "h6 Heading",
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 2,
                        children: [
                            ASTNode {
                                kind: TextSpan(
                                    "Horizontal Rules",
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Delimiter(
                    HorizontalRule,
                ),
            },
            ASTNode {
                kind: Delimiter(
                    HorizontalRule,
                ),
            },
            ASTNode {
                kind: Delimiter(
                    HorizontalRule,
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 2,
                        children: [
                            ASTNode {
                                kind: TextSpan(
                                    "Typographic replacements",
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "Enable typographer option to see result.",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "(c) (C) (r) (R) (tm) (TM) (p) (P) +––",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "test.. test… test….. test?….. test!….",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "!!!!!! ???? ,,  – —",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "“Smartypants, double quotes” and ‘single quotes’",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 2,
                        children: [
                            ASTNode {
                                kind: TextSpan(
                                    "Emphasis",
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: StyledSpan(
                                StyleNode {
                                    kind: Strong,
                                    children: [
                                        ASTNode {
                                            kind: TextSpan(
                                                "This is bold text",
                                            ),
                                        },
                                    ],
                                },
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: StyledSpan(
                                StyleNode {
                                    kind: Strong,
                                    children: [
                                        ASTNode {
                                            kind: TextSpan(
                                                "This is bold text",
                                            ),
                                        },
                                    ],
                                },
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: StyledSpan(
                                StyleNode {
                                    kind: Emphasis,
                                    children: [
                                        ASTNode {
                                            kind: TextSpan(
                                                "This is italic text",
                                            ),
                                        },
                                    ],
                                },
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: StyledSpan(
                                StyleNode {
                                    kind: Emphasis,
                                    children: [
                                        ASTNode {
                                            kind: TextSpan(
                                                "This is italic text",
                                            ),
                                        },
                                    ],
                                },
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: StyledSpan(
                                StyleNode {
                                    kind: Delete,
                                    children: [
                                        ASTNode {
                                            kind: TextSpan(
                                                "Strikethrough",
                                            ),
                                        },
                                    ],
                                },
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 2,
                        children: [
                            ASTNode {
                                kind: TextSpan(
                                    "Blockquotes",
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: ListView(
                    ListSimpleNode {
                        ignore_global_list_style: false,
                        first_symbol: Quote,
                        children: [],
                    },
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 2,
                        children: [
                            ASTNode {
                                kind: TextSpan(
                                    "Lists",
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "Unordered",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: ListView(
                    ListSimpleNode {
                        ignore_global_list_style: false,
                        first_symbol: Arabic,
                        children: [],
                    },
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "Ordered",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: ListView(
                    ListSimpleNode {
                        ignore_global_list_style: false,
                        first_symbol: Hyphen,
                        children: [],
                    },
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "Start numbering with offset:",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: ListView(
                    ListSimpleNode {
                        ignore_global_list_style: false,
                        first_symbol: Hyphen,
                        children: [],
                    },
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 2,
                        children: [
                            ASTNode {
                                kind: TextSpan(
                                    "Code",
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "Inline ",
                            ),
                        },
                        ASTNode {
                            kind: CodeNode(
                                CodeNode {
                                    inline: true,
                                    highlight: false,
                                    language: "text",
                                    code: "code",
                                    show_file_name: None,
                                    show_line_number: None,
                                    highlight_lines: [],
                                    hide_lines: [],
                                },
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "Indented code",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: CodeNode(
                    CodeNode {
                        inline: false,
                        highlight: true,
                        language: "",
                        code: "// Some comments\nline 1 of code\nline 2 of code\nline 3 of code\n",
                        show_file_name: None,
                        show_line_number: None,
                        highlight_lines: [],
                        hide_lines: [],
                    },
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "Block code “fences”",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: CodeNode(
                    CodeNode {
                        inline: false,
                        highlight: true,
                        language: "",
                        code: "Sample text here...\n",
                        show_file_name: None,
                        show_line_number: None,
                        highlight_lines: [],
                        hide_lines: [],
                    },
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "Syntax highlighting",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: CodeNode(
                    CodeNode {
                        inline: false,
                        highlight: true,
                        language: "js",
                        code: "var foo = function (bar) {\n  return bar++;\n};\n\nconsole.log(foo(5));\n",
                        show_file_name: None,
                        show_line_number: None,
                        highlight_lines: [],
                        hide_lines: [],
                    },
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 2,
                        children: [
                            ASTNode {
                                kind: TextSpan(
                                    "Tables",
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Value(
                    Null,
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "Right aligned columns",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Value(
                    Null,
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 2,
                        children: [
                            ASTNode {
                                kind: TextSpan(
                                    "Links",
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: LinkNode(
                                HyperLink {
                                    src: "http://dev.nodeca.com",
                                    is_bare: false,
                                },
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: LinkNode(
                                HyperLink {
                                    src: "http://nodeca.github.io/pica/demo/",
                                    is_bare: false,
                                    text: "title text!",
                                },
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "Autoconverted link ",
                            ),
                        },
                        ASTNode {
                            kind: LinkNode(
                                HyperLink {
                                    src: "https://github.com/nodeca/pica",
                                    is_bare: false,
                                },
                            ),
                        },
                        ASTNode {
                            kind: TextSpan(
                                " (enable linkify to see)",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 2,
                        children: [
                            ASTNode {
                                kind: TextSpan(
                                    "Images",
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: LinkNode(
                                ImageLink {
                                    src: "https://octodex.github.com/images/minion.png",
                                },
                            ),
                        },
                        ASTNode {
                            kind: TextSpan(
                                TextNode::SoftNewline,
                            ),
                        },
                        ASTNode {
                            kind: LinkNode(
                                ImageLink {
                                    src: "https://octodex.github.com/images/stormtroopocat.jpg",
                                    alt: "The Stormtroopocat",
                                },
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "Like links, Images also have a footnote style syntax",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: LinkNode(
                                ImageLink {
                                    src: "https://octodex.github.com/images/dojocat.jpg",
                                    alt: "The Dojocat",
                                },
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "With a reference later in the document defining the URL location:",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 2,
                        children: [
                            ASTNode {
                                kind: TextSpan(
                                    "Plugins",
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "The killer feature of ",
                            ),
                        },
                        ASTNode {
                            kind: CodeNode(
                                CodeNode {
                                    inline: true,
                                    highlight: false,
                                    language: "text",
                                    code: "markdown-it",
                                    show_file_name: None,
                                    show_line_number: None,
                                    highlight_lines: [],
                                    hide_lines: [],
                                },
                            ),
                        },
                        ASTNode {
                            kind: TextSpan(
                                " is very effective support of",
                            ),
                        },
                        ASTNode {
                            kind: TextSpan(
                                TextNode::SoftNewline,
                            ),
                        },
                        ASTNode {
                            kind: LinkNode(
                                HyperLink {
                                    src: "https://www.npmjs.org/browse/keyword/markdown-it-plugin",
                                    is_bare: false,
                                },
                            ),
                        },
                        ASTNode {
                            kind: TextSpan(
                                ".",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 3,
                        children: [
                            ASTNode {
                                kind: LinkNode(
                                    HyperLink {
                                        src: "https://github.com/markdown-it/markdown-it-emoji",
                                        is_bare: false,
                                    },
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: ListView(
                    ListSimpleNode {
                        ignore_global_list_style: false,
                        first_symbol: Quote,
                        children: [],
                    },
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "see ",
                            ),
                        },
                        ASTNode {
                            kind: LinkNode(
                                HyperLink {
                                    src: "https://github.com/markdown-it/markdown-it-emoji#change-output",
                                    is_bare: false,
                                },
                            ),
                        },
                        ASTNode {
                            kind: TextSpan(
                                " with twemoji.",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 3,
                        children: [
                            ASTNode {
                                kind: LinkNode(
                                    HyperLink {
                                        src: "https://github.com/markdown-it/markdown-it-sub",
                                        is_bare: false,
                                    },
                                ),
                            },
                            ASTNode {
                                kind: TextSpan(
                                    " / ",
                                ),
                            },
                            ASTNode {
                                kind: LinkNode(
                                    HyperLink {
                                        src: "https://github.com/markdown-it/markdown-it-sup",
                                        is_bare: false,
                                    },
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: ListView(
                    ListSimpleNode {
                        ignore_global_list_style: false,
                        first_symbol: Arabic,
                        children: [],
                    },
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 3,
                        children: [
                            ASTNode {
                                kind: LinkNode(
                                    HyperLink {
                                        src: "https://github.com/markdown-it/markdown-it-ins",
                                        is_bare: false,
                                    },
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "++Inserted text++",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 3,
                        children: [
                            ASTNode {
                                kind: LinkNode(
                                    HyperLink {
                                        src: "https://github.com/markdown-it/markdown-it-mark",
                                        is_bare: false,
                                    },
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "==Marked text==",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 3,
                        children: [
                            ASTNode {
                                kind: LinkNode(
                                    HyperLink {
                                        src: "https://github.com/markdown-it/markdown-it-footnote",
                                        is_bare: false,
                                    },
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "Footnote 1 link[^first].",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "Footnote 2 link[^second].",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "Inline footnote^[Text of inline footnote] definition.",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "Duplicated footnote reference[^second].",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 3,
                        children: [
                            ASTNode {
                                kind: LinkNode(
                                    HyperLink {
                                        src: "https://github.com/markdown-it/markdown-it-deflist",
                                        is_bare: false,
                                    },
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Value(
                    Null,
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: StyledSpan(
                                StyleNode {
                                    kind: Emphasis,
                                    children: [
                                        ASTNode {
                                            kind: TextSpan(
                                                "Compact style:",
                                            ),
                                        },
                                    ],
                                },
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "Term 1",
                            ),
                        },
                        ASTNode {
                            kind: TextSpan(
                                TextNode::SoftNewline,
                            ),
                        },
                        ASTNode {
                            kind: TextSpan(
                                "~ Definition 1",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "Term 2",
                            ),
                        },
                        ASTNode {
                            kind: TextSpan(
                                TextNode::SoftNewline,
                            ),
                        },
                        ASTNode {
                            kind: TextSpan(
                                "~ Definition 2a",
                            ),
                        },
                        ASTNode {
                            kind: TextSpan(
                                TextNode::SoftNewline,
                            ),
                        },
                        ASTNode {
                            kind: TextSpan(
                                "~ Definition 2b",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 3,
                        children: [
                            ASTNode {
                                kind: LinkNode(
                                    HyperLink {
                                        src: "https://github.com/markdown-it/markdown-it-abbr",
                                        is_bare: false,
                                    },
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "This is HTML abbreviation example.",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "It converts “HTML”, but keep intact partial entries like “xxxHTMLyyy” and so on.",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "*[HTML]: Hyper Text Markup Language",
                            ),
                        },
                    ],
                ),
            },
            ASTNode {
                kind: Header(
                    Header {
                        level: 3,
                        children: [
                            ASTNode {
                                kind: LinkNode(
                                    HyperLink {
                                        src: "https://github.com/markdown-it/markdown-it-container",
                                        is_bare: false,
                                    },
                                ),
                            },
                        ],
                    },
                ),
            },
            ASTNode {
                kind: Paragraph(
                    [
                        ASTNode {
                            kind: TextSpan(
                                "::: warning",
                            ),
                        },
                        ASTNode {
                            kind: TextSpan(
                                TextNode::SoftNewline,
                            ),
                        },
                        ASTNode {
                            kind: StyledSpan(
                                StyleNode {
                                    kind: Emphasis,
                                    children: [
                                        ASTNode {
                                            kind: TextSpan(
                                                "here be dragons",
                                            ),
                                        },
                                    ],
                                },
                            ),
                        },
                        ASTNode {
                            kind: TextSpan(
                                TextNode::SoftNewline,
                            ),
                        },
                        ASTNode {
                            kind: TextSpan(
                                ":::",
                            ),
                        },
                    ],
                ),
            },
        ],
    ),
}